[project]
name = "interactem-core"
dynamic = ["version", "dependencies"]
description = ""
readme = "README.md"
authors = [
    {name = "Sam Welborn", email = "swelborn@lbl.gov"},
    {name = "Chris Harris", email = "cjh@lbl.gov"}
]
requires-python = ">=3.10"

[tool.poetry]
version = "0.1.0"
packages = [{ include = "interactem" }]

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.9"
coloredlogs = "^15.0.1"
networkx = "^3.3"
nats-py = "^2.10.0"
nkeys = "^0.2.1"
tenacity = "^9.0.0"
pydantic-settings = "^2.10.1"
faststream = {version="^0.5.48", extras=["nats", "cli"]}

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pydantic-to-typescript = "^2.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
exclude = ["**/__init__.py", "thirdparty/**", "conftest.py", "**/_export.py"]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
]

isort = { known-first-party = ['interactem'] }

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
