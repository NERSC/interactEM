import { useMutation, useQueryClient } from "@tanstack/react-query"
import {
  createPipelineMutation,
  readPipelineQueryKey,
  readPipelinesQueryKey,
} from "../client/@tanstack/react-query.gen"

export const useCreatePipeline = (
  setCurrentPipelineId: (id: string | null) => void,
) => {
  const queryClient = useQueryClient()

  return useMutation({
    ...createPipelineMutation(),
    onError: (error) => {
      console.error("Error creating pipeline:", error)
    },
    onSuccess: (data) => {
      console.log("Pipeline created:", data)
      setCurrentPipelineId(data.id)
      // Here we should invalidate the pipeline query to get up to date information from backend
      // Currently this is unused, keeping here for reference
      // The "queryKey" generated by hey-api is not very good, we may need to do this manually
      const queryKeyPipeline = readPipelineQueryKey({ path: { id: data.id } })
      queryClient.invalidateQueries({
        queryKey: [queryKeyPipeline[0]._id],
      })
      const queryKeyPipelines = readPipelinesQueryKey()
      queryClient.invalidateQueries({
        queryKey: [queryKeyPipelines[0]._id],
      })
    },
    onSettled: () => {
      console.log("Pipeline creation complete")
    },
  })
}
