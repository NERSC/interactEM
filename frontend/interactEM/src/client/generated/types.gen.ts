// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type Operator = {
  id: string
  label: string
  description: string
  image: string
  inputs: Array<OperatorInput>
  outputs: Array<OperatorOutput>
  parameters: Array<OperatorParameter>
}

export type OperatorInput = {
  label: string
  description: string
}

export type OperatorOutput = {
  label: string
  description: string
}

export type OperatorParameter = {
  name: string
  label: string
  description: string
  type: ParameterType
  default: string
  required: boolean
  value?: string | null
  options?: Array<string> | null
}

export type Operators = {
  data: Array<Operator>
}

export type ParameterType =
  | "str"
  | "int"
  | "float"
  | "bool"
  | "mount"
  | "str-enum"

export type PipelineCreate = {
  data: {
    [key: string]: unknown
  }
}

export type PipelinePublic = {
  data: {
    [key: string]: unknown
  }
  running?: boolean
  id: string
  owner_id: string
}

export type PipelinesPublic = {
  data: Array<PipelinePublic>
  count: number
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type LoginAccessTokenData = {
  body: Body_login_login_access_token
}

export type LoginAccessTokenResponse = Token

export type LoginAccessTokenError = HTTPValidationError

export type TestTokenResponse = UserPublic

export type TestTokenError = unknown

export type RecoverPasswordData = {
  path: {
    email: string
  }
}

export type RecoverPasswordResponse = Message

export type RecoverPasswordError = HTTPValidationError

export type ResetPasswordData = {
  body: NewPassword
}

export type ResetPasswordResponse = Message

export type ResetPasswordError = HTTPValidationError

export type RecoverPasswordHtmlContentData = {
  path: {
    email: string
  }
}

export type RecoverPasswordHtmlContentResponse = string

export type RecoverPasswordHtmlContentError = HTTPValidationError

export type ReadUsersData = {
  query?: {
    limit?: number
    skip?: number
  }
}

export type ReadUsersResponse = UsersPublic

export type ReadUsersError = HTTPValidationError

export type CreateUserData = {
  body: UserCreate
}

export type CreateUserResponse = UserPublic

export type CreateUserError = HTTPValidationError

export type ReadUserMeResponse = UserPublic

export type ReadUserMeError = unknown

export type DeleteUserMeResponse = Message

export type DeleteUserMeError = unknown

export type UpdateUserMeData = {
  body: UserUpdateMe
}

export type UpdateUserMeResponse = UserPublic

export type UpdateUserMeError = HTTPValidationError

export type UpdatePasswordMeData = {
  body: UpdatePassword
}

export type UpdatePasswordMeResponse = Message

export type UpdatePasswordMeError = HTTPValidationError

export type RegisterUserData = {
  body: UserRegister
}

export type RegisterUserResponse = UserPublic

export type RegisterUserError = HTTPValidationError

export type ReadUserByIdData = {
  path: {
    user_id: string
  }
}

export type ReadUserByIdResponse = UserPublic

export type ReadUserByIdError = HTTPValidationError

export type UpdateUserData = {
  body: UserUpdate
  path: {
    user_id: string
  }
}

export type UpdateUserResponse = UserPublic

export type UpdateUserError = HTTPValidationError

export type DeleteUserData = {
  path: {
    user_id: string
  }
}

export type DeleteUserResponse = Message

export type DeleteUserError = HTTPValidationError

export type TestEmailData = {
  query: {
    email_to: string
  }
}

export type TestEmailResponse = Message

export type TestEmailError = HTTPValidationError

export type ReadPipelinesData = {
  query?: {
    limit?: number
    skip?: number
  }
}

export type ReadPipelinesResponse = PipelinesPublic

export type ReadPipelinesError = HTTPValidationError

export type CreatePipelineData = {
  body: PipelineCreate
}

export type CreatePipelineResponse = PipelinePublic

export type CreatePipelineError = HTTPValidationError

export type ReadPipelineData = {
  path: {
    id: string
  }
}

export type ReadPipelineResponse = PipelinePublic

export type ReadPipelineError = HTTPValidationError

export type DeletePipelineData = {
  path: {
    id: string
  }
}

export type DeletePipelineResponse = Message

export type DeletePipelineError = HTTPValidationError

export type RunPipelineData = {
  path: {
    id: string
  }
}

export type RunPipelineResponse = PipelinePublic

export type RunPipelineError = HTTPValidationError

export type ReadOperatorsResponse = Operators

export type ReadOperatorsError = unknown
